name: CI Pipeline

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '15 12 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Choose the browser to run UI tests'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  api-tests:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore API project dependencies
        run: dotnet restore APITesting.sln

      - name: Build API project
        run: dotnet build APITesting.sln --no-restore

      - name: Create logs directory for API tests
        run: mkdir -p ./APITesting/bin/Debug/net6.0/Logs

      - name: Run API tests and create TRX file
        run: dotnet test APITesting.sln --no-build --verbosity normal --logger "trx;LogFileName=./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml"

      - name: Upload API test results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: D:/a/api-tests/api-tests/APITesting/TestResults/APITesting/bin/Debug/net6.0/Logs/TestOutput.xml

  ui-tests:
    runs-on: windows-latest
    needs: api-tests
    if: always()  # This ensures that UI tests run regardless of the API test results

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore UI project dependencies
      run: dotnet restore WebUI.sln

    - name: Build UI project
      run: dotnet build WebUI.sln --no-restore

    - name: Install Chrome
      run: choco install googlechrome --no-progress

    - name: Get Chrome version
      shell: pwsh
      run: |
        $chromePath = 'C:\Program Files\Google\Chrome\Application\chrome.exe'
        $chromeVersion = (Get-Item $chromePath).VersionInfo.ProductVersion
        echo "CHROME_VERSION=$chromeVersion" >> $env:GITHUB_ENV

    - name: Install matching ChromeDriver
      shell: pwsh
      run: |
        $chromeMajorVersion = $env:CHROME_VERSION.Split('.')[0]
        $chromeDriverUrl = "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$chromeMajorVersion"
        $chromeDriverVersion = Invoke-RestMethod $chromeDriverUrl
        choco install chromedriver --version=$chromeDriverVersion --no-progress

    - name: Install Firefox
      if: ${{ github.event.inputs.browser == 'firefox' || github.event_name != 'workflow_dispatch' }}
      run: choco install firefox --no-progress

    - name: Install Edge
      if: ${{ github.event.inputs.browser == 'edge' || github.event_name != 'workflow_dispatch' }}
      run: choco install microsoft-edge --no-progress

    - name: Set Browser Environment Variable
      run: |
        if ($env:GITHUB_EVENT_NAME -eq "workflow_dispatch") {
          echo "BROWSER_TYPE=${{ github.event.inputs.browser }}" >> $env:GITHUB_ENV
        } else {
          echo "BROWSER_TYPE=chrome" >> $env:GITHUB_ENV
        }

    - name: Update appsettings.json
      shell: pwsh
      run: |
        .\.github\scripts\replace-appsettings.ps1 `
        -Path ./Epam/bin/Debug/net8.0/Core/appsettings.json `
        -BrowserType $env:BROWSER_TYPE `
        -Headless $true `
        -DownloadDirectory "./Epam/bin/Debug/net8.0/Core"

    - name: Run UI tests
      run: dotnet test WebUI.sln --no-build --verbosity normal
      continue-on-error: true


    - name: Upload UI test logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ui-test-logs
        path: ./Epam/bin/Debug/net8.0/*.log

    - name: Upload UI test screenshots
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ui-test-screenshots
        path: ./Epam/bin/Debug/net8.0/Screenshots
