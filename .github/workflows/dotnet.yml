name: CI Pipeline

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '15 12 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Choose the browser to run UI tests'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  api-tests:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore API project dependencies
        run: dotnet restore APITesting.sln

      - name: Build API project
        run: dotnet build APITesting.sln --no-restore

      - name: Create logs directory for API tests
        run: mkdir ./APITesting/bin/Debug/net6.0/Logs

      - name: Run API tests and create TRX file
        run: dotnet test APITesting.sln --no-build --verbosity normal --logger "trx;LogFileName=./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml"

      - name: Upload API test results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: ./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml

  ui-tests:
    runs-on: windows-latest
    needs: api-tests
    if: always()  # Ensures UI tests run regardless of API test results

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore UI project dependencies
        run: dotnet restore WebUI.sln

      - name: Install browsers
        shell: pwsh
        run: |
          $browser = "${{ github.event.inputs.browser }}"
          if ($browser -eq "chrome") {
            if (!(Get-Command "chrome" -ErrorAction SilentlyContinue)) {
              choco install googlechrome --no-progress
            }
          }
          elseif ($browser -eq "firefox") {
            if (!(Get-Command "firefox" -ErrorAction SilentlyContinue)) {
              choco install firefox --no-progress
            }
          }
          elseif ($browser -eq "edge") {
            if (!(Get-Command "msedge" -ErrorAction SilentlyContinue)) {
              choco install microsoft-edge --no-progress
            }
          }

      - name: Set Browser Environment Variable
        shell: pwsh
        run: echo "BROWSER_TYPE=${{ github.event.inputs.browser }}" >> $env:GITHUB_ENV

      - name: Update appsettings.json
        shell: pwsh
        run: |
          .\.github\scripts\replace-appsettings.ps1 `
          -Path ./WebUI/bin/Debug/net6.0/appsettings.json `
          -BrowserType $env:BROWSER_TYPE `
          -Headless $true `
          -DownloadDirectory "D:\a\api-tests\api-tests\WebUI\bin\Debug\net6.0\"

      - name: Run UI tests
        run: dotnet test WebUI.sln --no-build --verbosity normal
        continue-on-error: true

      - name: List files in bin directory for UI tests after run
        run: |
          echo "Listing files in the bin directory:"
          dir .\WebUI\bin\Debug\net6.0\

      - name: Upload UI test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-logs
          path: ./WebUI/bin/Debug/net6.0/*.log

      - name: Upload UI test screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-screenshots
          path: ./WebUI/bin/Debug/net6.0/Screenshots
