name: CI Pipeline

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '15 12 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Choose the browser to run UI tests'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  api-tests:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore API project dependencies
        run: dotnet restore APITesting.sln

      - name: Build API project
        run: dotnet build APITesting.sln --no-restore

      - name: Create logs directory for API tests
        run: mkdir -p ./APITesting/bin/Debug/net6.0/Logs

      - name: Run API tests and create TRX file
        run: dotnet test APITesting.sln --no-build --verbosity normal --logger "trx;LogFileName=./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml"

      - name: Upload API test results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: D:/a/api-tests/api-tests/APITesting/TestResults/APITesting/bin/Debug/net6.0/Logs/TestOutput.xml
  
  ui-tests:
    runs-on: windows-latest
    needs: api-tests
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore UI project dependencies
        run: dotnet restore WebUI.sln

      - name: Build UI project
        run: dotnet build WebUI.sln --no-restore

      - name: Install Chrome
        if: ${{ github.event.inputs.browser == 'chrome' || github.event_name != 'workflow_dispatch' }}
        run: |
          choco install googlechrome --no-progress

      - name: Install Firefox
        if: ${{ github.event.inputs.browser == 'firefox' || github.event_name != 'workflow_dispatch' }}
        run: |
          choco install firefox --no-progress

      - name: Install Edge
        if: ${{ github.event.inputs.browser == 'edge' || github.event_name != 'workflow_dispatch' }}
        run: |
          choco install microsoft-edge --no-progress

      - name: Set Browser Environment Variable
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            echo "BROWSER_TYPE=${{ github.event.inputs.browser }}" >> $env:GITHUB_ENV
          } else {
            echo "BROWSER_TYPE=chrome" >> $env:GITHUB_ENV
          }

      - name: Update appsettings.json
        shell: pwsh
        run: |
          $browser = if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') { '${{ github.event.inputs.browser }}' } else { 'chrome' }
          ./.github/scripts/replace-appsettings.ps1 `
          -Path ./Epam/bin/Debug/net8.0/Core/appsettings.json `
          -BrowserType $browser `
          -Headless $true `
          -DownloadDirectory "D:/a/api-tests/api-tests"
      
      
      - name: Create logs directory for API tests
        run: mkdir -p ./Epam/bin/Debug/net8.0/Logs


      - name: Run UI tests and create TRX file
        run: dotnet test WebUI.sln --no-build --verbosity normal --logger "trx;LogFileName= ./Epam/bin/Debug/net8.0/Logs/UI_TestOutput.xml"
        continue-on-error: true

        

      - name: List files in bin directory for UI tests after run
        run: |
          echo "Listing files in the bin directory:"
          ls -R ./Epam/bin/Debug/net8.0/
          
      - name: Upload UI test results (.trx)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: D:/a/api-tests/api-tests/APITesting/Epam/bin/Debug/net8.0/Logs/UI_TestOutput.xml

      - name: Upload UI test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-logs
          path: ./Epam/bin/Debug/net8.0/Core/Logs/*.log

      - name: Upload UI test screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-screenshots
          path: ./Epam/bin/Debug/net8.0/Screenshots
