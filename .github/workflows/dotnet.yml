name: CI Pipeline

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '15 12 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Choose the browser to run UI tests'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
          - edge

jobs:
  api-tests:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore API project dependencies
        run: dotnet restore APITesting.sln

      - name: Build API project
        run: dotnet build APITesting.sln --no-restore

      - name: Create logs directory for API tests
        run: mkdir ./APITesting/bin/Debug/net6.0/Logs

      - name: Run API tests and create TRX file
        run: dotnet test APITesting.sln --no-build --verbosity normal --logger "trx;LogFileName=./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml"

      - name: Upload API test results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: ./APITesting/bin/Debug/net6.0/Logs/TestOutput.xml

  ui-tests:
      runs-on: ubuntu-latest
      needs: api-tests
      if: always()  # This ensures that UI tests run regardless of the API test results

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore UI project dependencies
        run: dotnet restore WebUI.sln

      - name: Build UI project
        run: dotnet build WebUI.sln --no-restore


      - name: List files in bin directory for UI tests
        run: |
          echo "Listing files in the bin directory:"
          ls -R ./
      - name: Install Chrome
        if: ${{ github.event.inputs.browser == 'chrome' || github.event_name != 'workflow_dispatch' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      - name: Install Firefox
        if: ${{ github.event.inputs.browser == 'firefox' || github.event_name != 'workflow_dispatch' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
      - name: Install Edge
        if: ${{ github.event.inputs.browser == 'edge' || github.event_name != 'workflow_dispatch' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://packages.microsoft.com/keys/microsoft.asc -O- | sudo gpg --dearmor -o /usr/share/keyrings/microsoft.gpg
          echo "deb [signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge/ stable main" | sudo tee /etc/apt/sources.list.d/microsoft-edge.list
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable
      - name: Set Browser Environment Variable
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BROWSER_TYPE=${{ github.event.inputs.browser }}" >> $GITHUB_ENV
          else
            echo "BROWSER_TYPE=chrome" >> $GITHUB_ENV
          fi
      - name: Update appsettings.json
        shell: pwsh
        run: |
          .\.github\scripts\replace-appsettings.ps1 `
          -Path ./Epam/bin/Debug/net8.0/Core/appsettings.json `
          -BrowserType ${{ github.event.inputs.browser }} `
          -Headless $true `
          -DownloadDirectory "/home/runner/work/api-tests/api-tests"
      - name: Run UI tests
        run: dotnet test WebUI.sln --no-build --verbosity normal
        continue-on-error: true

      - name: List files in bin directory for UI tests after run
        run: |
          echo "Listing files in the bin directory:"
          ls -R ./
      - name: Upload UI test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: ./TestResults/

      - name: Upload UI test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-logs
          path: ./Epam/bin/Debug/net8.0/*.log

      - name: Upload UI test screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-screenshots
          path: ./Epam/bin/Debug/net8.0/Screenshots
